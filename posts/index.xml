<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Evan Krall</title>
    <link>https://www.evankrall.com/posts/</link>
    <description>Recent content in Posts on Evan Krall</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 24 Oct 2024 00:24:10 -0700</lastBuildDate>
    <atom:link href="https://www.evankrall.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pipad: LineageOS 21 KonstaKANG is working</title>
      <link>https://www.evankrall.com/posts/pipad/logs/233967-lineageos-21-konstakang-is-working/</link>
      <pubDate>Thu, 24 Oct 2024 00:24:10 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/233967-lineageos-21-konstakang-is-working/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/233967-lineageos-21-konstakang-is-working&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I was able to get KonstaKANG&#39;s build of LineageOS 21 (Android 14) working on the Pipad!&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://www.evankrall.com/img/pipad/6667781729753086881.jpeg&#34;/&gt;&lt;/figure&gt;&#xA;&lt;p&gt;It&#39;s an almost-stock image, but I had to make a few changes to the kernel:&lt;br/&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&lt;li&gt;Backport the sn65dsi83 driver from my &lt;a href=&#34;https://github.com/EvanKrall/raspberrypi-linux/commits/pipad/&#34;&gt;raspberrypi-linux kernel&lt;/a&gt; (which is 5.15) to my fork of the &lt;a href=&#34;https://github.com/EvanKrall/android_kernel_brcm_rpi/tree/android-14.0&#34;&gt;raspberry-vanilla&lt;/a&gt; kernel&lt;/li&gt;&lt;li&gt;Copy the appropriate dtoverlays over&lt;/li&gt;&lt;li&gt;Set a few things in config_user.txt:&lt;/li&gt;&lt;/ul&gt;&#xA;&lt;pre class=&#34;hljs ini&#34;&gt;&lt;span class=&#34;hljs-comment&#34;&gt;# User specific config.txt options&lt;/span&gt;&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtoverlay&lt;/span&gt;=gpio-shutdown,gpio_pin=&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;,active_low=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;,gpio_pull=up,debounce=&lt;span class=&#34;hljs-number&#34;&gt;10&lt;/span&gt;&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtoverlay&lt;/span&gt;=gpio-power&lt;span class=&#34;hljs-literal&#34;&gt;off&lt;/span&gt;,gpiopin=&lt;span class=&#34;hljs-number&#34;&gt;25&lt;/span&gt;,active_low=&lt;span class=&#34;hljs-number&#34;&gt;1&lt;/span&gt;&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtoverlay&lt;/span&gt;=gpio-key,gpio=&lt;span class=&#34;hljs-number&#34;&gt;22&lt;/span&gt;,keycode=&lt;span class=&#34;hljs-number&#34;&gt;116&lt;/span&gt;,label=&lt;span class=&#34;hljs-string&#34;&gt;&#34;POWER&#34;&lt;/span&gt;&#xD;&#xA;&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtoverlay&lt;/span&gt;=vc4-kms-dsi-ti-sn65dsi83&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtoverlay&lt;/span&gt;=pipad-touchscreen&#xD;&#xA;&lt;span class=&#34;hljs-attr&#34;&gt;dtparam&lt;/span&gt;=spi=&lt;span class=&#34;hljs-literal&#34;&gt;off&lt;/span&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Fortunately, the raspberry-vanilla kernel already comes with the Goodix touchscreen driver installed, so I didn&#39;t have to do anything to the pipad-touchscreen dtoverlay.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Identifying the ambient light sensor</title>
      <link>https://www.evankrall.com/posts/pipad/logs/227979-identifying-the-ambient-light-sensor/</link>
      <pubDate>Tue, 05 Mar 2024 05:39:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/227979-identifying-the-ambient-light-sensor/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/227979-identifying-the-ambient-light-sensor&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&#39;ve long been ignoring the ambient light sensor flex cable that&#39;s part of the iPad&#39;s display assembly. This connects to a 24-pin board-to-board connector on the logic board, pictured on the right edge here:&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://www.evankrall.com/img/pipad/4417321612560996981.jpg&#34;/&gt;&lt;/figure&gt;&#xA;&lt;p&gt;Only 7 of the 24 pins are used:&lt;/p&gt;&#xA;&lt;ul&gt;&lt;li&gt;3.0V&lt;/li&gt;&lt;li&gt;SCL and SDA for i2c&lt;/li&gt;&lt;li&gt;ALS_INT_L&lt;/li&gt;&lt;li&gt;COMP_RST_L&lt;/li&gt;&lt;li&gt;COMP_INT_L&lt;/li&gt;&lt;/ul&gt;&#xA;&lt;p&gt;The other 17 pins are ground.&lt;/p&gt;&lt;p&gt;(Fun fact: this connector, the AA03-S024VA1, is also what they used for the camera in the iPhone 3G, though with a different pin configuration. Maybe they had a lot of extras and decided to reuse it on the iPad. It&#39;s not like they were low on space in the iPad, so using a larger-than-necessary connector wouldn&#39;t be a big deal.)&lt;span&gt;&lt;/span&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Audio codec: ground-centered mode, BCLK, headset detection</title>
      <link>https://www.evankrall.com/posts/pipad/logs/227039-audio-codec-ground-centered-mode-bclk-headset-detection/</link>
      <pubDate>Sun, 21 Jan 2024 08:23:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/227039-audio-codec-ground-centered-mode-bclk-headset-detection/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/227039-audio-codec-ground-centered-mode-bclk-headset-detection&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I haven&#39;t worked on the audio codec part of my board in a while (I don&#39;t think I ever tested it on rev1), but it&#39;s the last major section of my rev2 PCB that needs testing. A codec is a &lt;strong&gt;co&lt;/strong&gt;der/&lt;strong&gt;dec&lt;/strong&gt;oder -- something that encodes and decodes a digital signal --- in this case, to/from analog, so it&#39;s an ADC and DAC. In PC terminology, this would be the sound card.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: It&#39;s a tablet! (Rev2 PCB testing)</title>
      <link>https://www.evankrall.com/posts/pipad/logs/226319-its-a-tablet-rev2-pcb-testing/</link>
      <pubDate>Fri, 29 Dec 2023 21:08:18 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/226319-its-a-tablet-rev2-pcb-testing/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/226319-its-a-tablet-rev2-pcb-testing&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It works!&lt;/p&gt;&#xA;&lt;div class=&#34;video-container&#34;&gt;&lt;iframe allowfullscreen=&#34;&#34; frameborder=&#34;0&#34; src=&#34;//www.youtube.com/embed/oxaLzAPOkKQ&#34; style=&#34;width: 500px; height: 281px;&#34;&gt;&lt;/iframe&gt;&lt;/div&gt;&#xA;&lt;p&gt;I ordered the second revision of my PCB a few months back, and have been slowly working my way through testing and debugging the functionality. So far, the PCB hasn&#39;t required any modifications -- all the issues I&#39;ve encountered have been soldering or software issues.&lt;/p&gt;&#xA;&lt;p&gt;A brief list of things I tested / debugged:&lt;/p&gt;&#xA;&lt;ul&gt;&lt;li&gt;PCIe port (for the NVMe drive) worked without issue.&lt;/li&gt;&lt;li&gt;5V boost converter mysteriously stopped working -- the 787k resistor turned into a 150k resistor?? Maybe I just placed the wrong resistor there in the first place, but I swear this was working before. (I use a 787k and 150k resistor as a feedback network for the MP3422GG boost converter.) Replacing the resistor fixed the issue.&lt;/li&gt;&lt;li&gt;Battery charger wasn&#39;t charging, until I discovered some passives were missing. Replacing them fixed the issue.&lt;/li&gt;&lt;li&gt;LCD backlight controller wasn&#39;t working, until I noticed that the inductor had a bad solder joint. Touching that up with a soldering iron fixed the issue.&lt;/li&gt;&lt;li&gt;The image on the LCD was corrupted -- at first, it was showing 3-ish copies of the screen vertically, like it was skipping all but every 3rd line. After messing with timings and frequencies for a while, I noticed that pressure on the board would change the severity of the problem (see youtube video below). At some point, the problem got significantly better, where the screen would be relatively stable vertically, but individual lines would be corrupted at some point. (Unfortunately, forgot to get a photo of this.) I noticed that it would improve when I cranked up the LVDS differential output voltage on the sn65dsi83 (CHA_LVDS_VOD_SWING in the datasheet). This indicated to me that there was an analog problem on the board. Hitting the sn65 and the LVDS connector with some flux and hot air solved the issue.&lt;/li&gt;&lt;li&gt;A while later, I noticed that my battery voltage was really low, and that it wasn&#39;t pulling any current from the USB power supply. After looking for any error codes or anything weird in the i2c registers of the battery charger IC, I bodged an LED and resistor onto the STAT pin of my charger IC, and that glowed solid. If there were a fault code, it would&#39;ve blinked at 1Hz. Once again, flux and hot air solved the issue.&lt;/li&gt;&lt;li&gt;I tested the touchscreen - clean (none of the noise that plagued my earlier board revision; dunno why this is any better, as the only change I made to this part of the hardware was rounding the tracks to look pretty), but had a dead zone on the middle few Y lines. More flux and hot air fixed that.&lt;/li&gt;&lt;/ul&gt;&#xA;&lt;p&gt;I&#39;m beginning to think that my bismuth-based low temperature solder is a bad idea, especially since the 0.8mm PCB is so flexible.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: NVMe, HDQ, SDIO, and curvy PCB traces</title>
      <link>https://www.evankrall.com/posts/pipad/logs/223863-nvme-hdq-sdio-and-curvy-pcb-traces/</link>
      <pubDate>Wed, 04 Oct 2023 07:15:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/223863-nvme-hdq-sdio-and-curvy-pcb-traces/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/223863-nvme-hdq-sdio-and-curvy-pcb-traces&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I apologize for the long delay since the last update. I&#39;m still here, making spurts of progress here and there.&lt;/p&gt;&#xA;&lt;p&gt;Since the last log, I&#39;ve worked on a number of things:&lt;br/&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&lt;li&gt;Figuring out why NVMe / PCIe wasn&#39;t working&lt;/li&gt;&lt;li&gt;Successfully getting the Pi to talk to the battery pack through TI&#39;s HDQ protocol.&lt;/li&gt;&lt;li&gt;Unsuccessfully attempting to get the Pi to talk to the iPad&#39;s Wifi chip through SDIO.&lt;/li&gt;&lt;li&gt;Redesigning the PCB to fix some earlier issues.&lt;/li&gt;&lt;/ol&gt;&#xA;&lt;h1&gt;NVMe&lt;/h1&gt;&#xA;&lt;p&gt;On my previous revision of the PCB, I had added a M.2 slot to allow for a 2230-sized NVMe SSD -- these are getting pretty cheap these days (around $15 for 128GB), and should be faster and more durable than eMMC.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Debugging the power button</title>
      <link>https://www.evankrall.com/posts/pipad/logs/215439-debugging-the-power-button/</link>
      <pubDate>Mon, 23 Jan 2023 00:27:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/215439-debugging-the-power-button/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/215439-debugging-the-power-button&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Hey, I&#39;m back with a simple one today. Between the holidays and general life stuff, I haven&#39;t found time to work on this project for a while. Motivation on hobby projects seems to ebb and flow. Hopefully it&#39;s starting to flow again.&lt;/p&gt;&#xA;&lt;p&gt;I saw a post on the Facebook group &#34;Raspberry Pi and DIY Projects&#34; where someone was using the MAX16150 IC to handle power on/off for their Pi, and it inspired me to try and get my MAX16150-based circuit working.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Attempting to tune the touchscreen controller</title>
      <link>https://www.evankrall.com/posts/pipad/logs/212604-attempting-to-tune-the-touchscreen-controller/</link>
      <pubDate>Fri, 21 Oct 2022 11:15:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/212604-attempting-to-tune-the-touchscreen-controller/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/212604-attempting-to-tune-the-touchscreen-controller&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For reasons documented in a &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/189710-a-more-reasonable-touchscreen-controller-ic&#34;&gt;previous log entry&lt;/a&gt;, I am using the GT9110 touchscreen controller from Goodix.&#xD;&#xA;&#x9;(Essentially, this is the only suitable touchscreen controller I could find in a footprint that I could actually use without spending hundreds of dollars per PCB revision.) In a &lt;a href=&#34;https://hackaday.io/project/186431-hdp-2022-put-an-rpi-cm4-into-an-original-ipad/log/208847-getting-the-gt9110-touchscreen-controller-working&#34;&gt;later log entry&lt;/a&gt;, I got the GT9110 and Linux talking to each other.&lt;/p&gt;&#xA;&lt;p&gt;Goodix is quite a frustrating company to buy from as a hobbyist.&#xD;&#xA;&#x9;In comparison to some chip manufacturers like TI, who publish loads of documentation about their chips on the internet, Goodix is very stingy with their documentation.&#xD;&#xA;As far as I can tell, there&#39;s no way for hobbyists to get the documentation except hoping to find a leaked datasheet posted online somewhere. When you do find a datasheet, it&#39;s not particularly helpful. Some guidance on how to tune your touch panel (rather than just a table of registers with ~5 words about each) would be nice.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Trying my hand at driver development</title>
      <link>https://www.evankrall.com/posts/pipad/logs/212428-trying-my-hand-at-driver-development/</link>
      <pubDate>Tue, 18 Oct 2022 07:19:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/212428-trying-my-hand-at-driver-development/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/212428-trying-my-hand-at-driver-development&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One issue which contributes to the backlight flicker is the undervoltage protection (UVLO) feature of the TPS61177A. This is configurable over i2c, but defaults to 3.5V, which is pretty high.&lt;/p&gt;&#xA;&lt;p&gt;In order to set this at startup, I decided to &lt;a href=&#34;https://github.com/EvanKrall/raspberrypi-linux/commit/4673caf0170e2480245cf031becc20dfc4537df8&#34;&gt;try and write a kernel driver for the TPS61177A&lt;/a&gt;. I partly followed &lt;a href=&#34;https://docs.kernel.org/i2c/writing-clients.html&#34;&gt;https://docs.kernel.org/i2c/writing-clients.html&lt;/a&gt; and partly cargo-culted some stuff (mostly related to regmap) from the sn65dsi83 driver. (I&#39;ve poked around in that driver in previous debugging sessions, which helps me understand its structure more than some other random i2c device driver.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Backlight flickering investigation &#43; device tree overlay for the battery charger.</title>
      <link>https://www.evankrall.com/posts/pipad/logs/212330-backlight-flickering-investigation-device-tree-overlay-for-the-battery-charger/</link>
      <pubDate>Sun, 16 Oct 2022 07:37:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/212330-backlight-flickering-investigation-device-tree-overlay-for-the-battery-charger/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/212330-backlight-flickering-investigation-device-tree-overlay-for-the-battery-charger&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&#39;ve been investigating the backlight flickering that I showed in my previous log entry. My main hypothesis was that the long wires between my breakout board and my main PCB were adding too much inductance, causing increased ripple. I had moved an input decoupling capacitor to the breakout board, which helped some but didn&#39;t entirely solve the problem. Adding more capacitance on the input side didn&#39;t help much more.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Starting to look like a tablet</title>
      <link>https://www.evankrall.com/posts/pipad/logs/212280-starting-to-look-like-a-tablet/</link>
      <pubDate>Sat, 15 Oct 2022 07:10:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/212280-starting-to-look-like-a-tablet/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/212280-starting-to-look-like-a-tablet&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I soldered my backlight controller IC onto a QFN breakout board and bodged some connections over to my PCB, so that I could view my LCD without having to provide an external backlight.&lt;/p&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;https://www.evankrall.com/img/pipad/9285901665816322268.jpg&#34;/&gt;&lt;figcaption&gt;The mess of wires here is mostly bodge connections from that QFN breakout to traces on the PCB -- battery power, i2c, PWM and enable pins, and the anode + cathode pins for the LCD backlight.&lt;/figcaption&gt;&lt;/figure&gt;&#xA;&lt;p&gt;This works, but has some issues: the backlight flickers a lot when the Pi is under load (or using wifi or something?) I think the backlight controller is hitting its under-voltage lockout. At first, I had left the large decoupling cap on the main PCB, but in this configuration the backlight would strobe for about a second on boot, then would shut off. Moving the capacitor to the breakout board helped, but the flicker remains. I may add more capacitance.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: The LCD works!</title>
      <link>https://www.evankrall.com/posts/pipad/logs/211856-the-lcd-works/</link>
      <pubDate>Fri, 07 Oct 2022 07:41:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/211856-the-lcd-works/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/211856-the-lcd-works&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&#xD;&#xA;After finding and fixing a few silly mistakes, I finally got the LCD working:&#xD;&#xA;&lt;/p&gt;&#xA;&lt;figure&gt;&#xA;&lt;img src=&#34;https://www.evankrall.com/img/pipad/8507331665126694461.jpeg&#34;/&gt;&#xA;&lt;figcaption&gt;&#xD;&#xA;        The iPad&#39;s LCD displaying glxgears, backlit by a makeshift backlight — the circuitry for driving the built-in backlight had a mistake that I haven&#39;t fixed yet, documented in &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/207483-cm4-carrier-board-chip-shortage-pain-bodges-silly-mistakes-and-tragedy&#34;&gt;this project log&lt;/a&gt;.&lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&lt;p&gt;&#xD;&#xA;The issues I discovered that I had to fix were:&#xD;&#xA;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;The registers for HFP, HBP, and Hsync pulse width are 8 bits on the sn65dsi83, but I was trying to set several of these to values above 255. This was causing them to wrap around, meaning my horizontal line frequency was different than I wanted. I had to adjust these values to be &amp;lt;=255.&lt;/li&gt;&#xA;&lt;li&gt;I recalled that &lt;a href=&#34;https://forums.raspberrypi.com/viewtopic.php?p=2020479&amp;amp;hilit=4+lanes#p2020337&#34;&gt;someone had told me that 4 lanes of DSI doesn&#39;t seem to work&lt;/a&gt; with the sn65 (at least with the current version of the Linux driver). I had most recently been testing with 4 lanes, so I was getting no LVDS output. Switching to 3 lanes (and adjusting the desired LVDS clock speed downwards so that the DSI clock would be under 500MHz) got the sn65 producing LVDS signals that seemed to work.&lt;/li&gt;&#xA;&lt;li&gt;The LVDS connector on the other side of my board had come off. At some point I had tried swapping out the sn65 IC for a fresh one, thinking I might have burned out the LVDS outputs by shorting them to the inconveniently adjacent 1.8V supply pins. During this rework process, the solder on the LVDS connector must have gotten hot enough to melt (it is essentially right behind the sn65).&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;&#xD;&#xA;    I&#39;m fortunate that the LCD doesn&#39;t seem to mind if I use a &lt;a href=&#34;https://github.com/EvanKrall/raspberrypi-linux/commit/ca54a60ae16fa958aff7e192419708309132e1c5#diff-b0efb865b9590da1c62bb09d5b597a61bcc769888ce286b5c8a9f72d35fc3788R4575&#34;&gt;different timing configuration&lt;/a&gt; than is specified in its datasheet.&#xD;&#xA;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Some progress on the LCD</title>
      <link>https://www.evankrall.com/posts/pipad/logs/208195-some-progress-on-the-lcd/</link>
      <pubDate>Mon, 04 Jul 2022 06:24:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/208195-some-progress-on-the-lcd/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/208195-some-progress-on-the-lcd&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The iPad&#39;s LCD wants its video input data in the LVDS format, but the CM4 can&#39;t output LVDS. It can, however, output DSI video, and there are chips like the &lt;a href=&#34;https://www.ti.com/product/SN65DSI83-Q1&#34;&gt;sn65dsi83-q1 from TI&lt;/a&gt; which can convert from DSI to LVDS.&lt;/p&gt;&#xA;&lt;p&gt;About a year ago, I had &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/196964-colors-sn65dsi83-test-pattern&#34;&gt;gotten the sn65dsi83 somewhat working&lt;/a&gt; on the previous revision of my board. However, I ran into an issue with that board design that was difficult to work around: That board was designed to work as a hat for a full-size Pi (for ease of controlling which parts of the board were connected), so it only supported the 2 lanes of DSI that are exposed on the 15-pin display FFC on the Pi 4. This made it impossible to get clock speeds in the right ranges to make everything happy:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Getting the GT9110 touchscreen controller working</title>
      <link>https://www.evankrall.com/posts/pipad/logs/208187-getting-the-gt9110-touchscreen-controller-working/</link>
      <pubDate>Mon, 04 Jul 2022 02:49:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/208187-getting-the-gt9110-touchscreen-controller-working/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/208187-getting-the-gt9110-touchscreen-controller-working&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&#39;ve been testing out the GT9110 for the past few days, and finally got it working today.&lt;/p&gt;&#xA;&lt;p&gt;My board uses a Goodix GT9110 touchscreen controller, which is closely related to a few other parts (GT911, GT928, etc.), and is basically the only touchscreen controller that I could find which &lt;a href=&#34;https://hackaday.io/project/177256/log/189710-a-more-reasonable-touchscreen-controller-ic&#34;&gt;met&lt;/a&gt; my &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/188901-the-big-scary-touchscreen-connectors&#34;&gt;requirements&lt;/a&gt;:&lt;/p&gt;&#xA;&lt;ol&gt;&lt;li&gt;Has enough drive and sense pins to work with my touchscreen&lt;/li&gt;&lt;li&gt;A reasonable footprint which doesn&#39;t require expensive, high-density PCBs (which excludes the mXT2952, an 0.5mm-pitch BGA)&lt;/li&gt;&lt;li&gt;Available in small quantities for a reasonable price (which excludes the MXT2912TD-A)&lt;/li&gt;&lt;li&gt;Actual datasheets are available (which excludes a bunch of Cypress chips)&lt;/li&gt;&lt;li&gt;Linux drivers are available&lt;/li&gt;&lt;/ol&gt;&#xA;&lt;p&gt;(I should note that I haven&#39;t found an English datasheet for the GT9110, only one in Chinese. However, I did find English datasheets for related chips, like the GT911 and GT9113. These, plus Google Translate, were enough to lay out my PCB.) &lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Real-time clock: It&#39;s nice when something is easy.</title>
      <link>https://www.evankrall.com/posts/pipad/logs/207999-real-time-clock-its-nice-when-something-is-easy/</link>
      <pubDate>Wed, 29 Jun 2022 07:18:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/207999-real-time-clock-its-nice-when-something-is-easy/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/207999-real-time-clock-its-nice-when-something-is-easy&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At the very last minute before ordering my PCBs, I realized I probably wanted a real-time clock on the board somewhere. I searched on Digi-Key, found the RV-8263-C7, which was:&lt;/p&gt;&#xA;&lt;ul&gt;&lt;li&gt;in stock (not anymore, lol)&lt;/li&gt;&lt;li&gt;cheap&lt;/li&gt;&lt;li&gt;tiny&lt;/li&gt;&lt;li&gt;requires minimal external components (just a decoupling cap and a pull-up resistor on an output enable pin)&lt;/li&gt;&lt;li&gt;has a Linux kernel driver (this chip has the same protocol as the PCF85063)&lt;/li&gt;&lt;/ul&gt;&#xA;&lt;p&gt;I found an empty spot on my board with I2C and VBAT lines nearby, and laid it out in a few minutes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Figuring out why the CM4 wouldn&#39;t boot when attached to my board</title>
      <link>https://www.evankrall.com/posts/pipad/logs/207834-figuring-out-why-the-cm4-wouldnt-boot-when-attached-to-my-board/</link>
      <pubDate>Sun, 26 Jun 2022 08:27:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/207834-figuring-out-why-the-cm4-wouldnt-boot-when-attached-to-my-board/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/207834-figuring-out-why-the-cm4-wouldnt-boot-when-attached-to-my-board&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In my previous log entry, I had fried my CM4 by shorting 5V to 3.3V, so I had to order a replacement, which arrived last week.&lt;/p&gt;&#xA;&lt;p&gt;The next thing for me to test is whether I can boot the CM4 on my board, so I installed Raspberry Pi OS and set &lt;code&gt;enable_uart=1&lt;/code&gt; in /boot/config.txt. With the CM4 still in the CM4IO, I verified that I could see boot messages and log into the CM4 over serial.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: CM4 carrier board: chip shortage pain, bodges, silly mistakes, and tragedy.</title>
      <link>https://www.evankrall.com/posts/pipad/logs/207483-cm4-carrier-board-chip-shortage-pain-bodges-silly-mistakes-and-tragedy/</link>
      <pubDate>Tue, 14 Jun 2022 07:56:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/207483-cm4-carrier-board-chip-shortage-pain-bodges-silly-mistakes-and-tragedy/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/207483-cm4-carrier-board-chip-shortage-pain-bodges-silly-mistakes-and-tragedy&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;h1&gt;Chip shortage problems&lt;/h1&gt;&#xA;&lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;/p&gt;&#xA;&lt;p&gt;Shortly after my last project log, I tried to place an order for all the new components that I&#39;d need for the next revision of my board, as well as re-stocking anything that I had already used most of. I discovered that my backlight controller of choice had gone out of stock with indefinite lead times, so I had to swap to a different backlight driver. (I switched from the TPS61176 to the TPS61177, which was the next cheapest suitable controller on DigiKey.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: RPi CM4 and Radxa CM3 versions of the board</title>
      <link>https://www.evankrall.com/posts/pipad/logs/202654-rpi-cm4-and-radxa-cm3-versions-of-the-board/</link>
      <pubDate>Wed, 26 Jan 2022 07:53:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/202654-rpi-cm4-and-radxa-cm3-versions-of-the-board/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/202654-rpi-cm4-and-radxa-cm3-versions-of-the-board&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since the last time I had a board made, I&#39;ve discovered several revisions that I needed to make:&lt;/p&gt;&lt;p&gt;- The 5V boost of the bq25895 cuts out long enough to shut off the Pi when you connect USB power.&lt;/p&gt;&lt;p&gt;- I needed extra lanes of DSI going from the CM4 to the SN65DSI83 chip in order for all the clock rates to fall within the ranges allowed by the SN65 and the iPad&#39;s display.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Absurdle Hard-Mode High Score</title>
      <link>https://www.evankrall.com/posts/absurdle-highscore/</link>
      <pubDate>Sat, 15 Jan 2022 14:31:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/absurdle-highscore/</guid>
      <description>&lt;p&gt;I have managed to play what I believe to be the longest possible non-trivial game of &lt;a href=&#34;https://qntm.org/files/wordle/index.html&#34;&gt;Absurdle&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;h1 id=&#34;what-is-absurdle-and-what-is-wordle&#34;&gt;What is Absurdle (and what is Wordle)?&lt;/h1&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.powerlanguage.co.uk/wordle/&#34;&gt;Wordle&lt;/a&gt; is a game by Josh Wardle, in which you try to guess the secret five-letter word of the day.&#xA;You have 6 guesses, and each time you make a guess, the game colors each of your letters either black ⬛️, yellow 🟨, or green 🟩.&#xA;A green letter means that you got that letter in the right position - i.e. a green &lt;code&gt;a&lt;/code&gt; in the third position means the secret word must have &lt;code&gt;a&lt;/code&gt; as its third letter.&#xA;A yellow letter means that letter exists in the word, but not in that position - i.e. a yellow &lt;code&gt;b&lt;/code&gt; in the first position means the secret has a &lt;code&gt;b&lt;/code&gt; in it somewhere, just not in the first position.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Colors! (sn65dsi83 test pattern)</title>
      <link>https://www.evankrall.com/posts/pipad/logs/196964-colors-sn65dsi83-test-pattern/</link>
      <pubDate>Mon, 23 Aug 2021 06:26:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/196964-colors-sn65dsi83-test-pattern/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/196964-colors-sn65dsi83-test-pattern&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks to the &lt;a href=&#34;https://www.raspberrypi.org/forums/viewtopic.php?f=44&amp;amp;t=318186&amp;amp;p=1905082#p1905082&#34;&gt;help of some folks on the Raspberry Pi forums&lt;/a&gt;, I&#39;ve got the sn65dsi83 driver loading, and the Pi generating enough DSI signal for the SN65DSI83 to be able to generate a test pattern (it uses the DSI clock to generate the LVDS clock)&lt;/p&gt;&lt;figure&gt;&lt;img src=&#34;https://www.evankrall.com/img/pipad/225251629699947390.jpg&#34;/&gt;&lt;/figure&gt;&lt;p&gt;Hopefully I can get those black lines to go away.&lt;br/&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Using ftrace to debug device tree problems</title>
      <link>https://www.evankrall.com/posts/pipad/logs/196672-using-ftrace-to-debug-device-tree-problems/</link>
      <pubDate>Wed, 18 Aug 2021 07:28:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/196672-using-ftrace-to-debug-device-tree-problems/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/196672-using-ftrace-to-debug-device-tree-problems&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For the past few days, I&#39;ve been trying to get the sn65ds83 driver (recently added to linux) running and talking to my board. It has been a (re-)learning experience trying to get this device tree overlay to cooperate.&lt;/p&gt;&#xA;&lt;p&gt;Following my own advice from the &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/190683-attempting-to-write-a-device-tree-overlay-for-the-soundcard&#34;&gt;last time I touched device trees&lt;/a&gt;, I used &lt;code&gt;udevadm monitor&lt;/code&gt; and &lt;code&gt;dmesg -w&lt;/code&gt; to watch for kernel/udev messages while loading my overlay with &lt;code&gt;sudo dtoverlay pipad_screen.&lt;/code&gt; This gave me this helpful error message:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: First light: testing and fixing the backlight controller</title>
      <link>https://www.evankrall.com/posts/pipad/logs/195169-first-light-testing-and-fixing-the-backlight-controller/</link>
      <pubDate>Sat, 10 Jul 2021 05:07:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/195169-first-light-testing-and-fixing-the-backlight-controller/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/195169-first-light-testing-and-fixing-the-backlight-controller&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Based on my guess of how complicated testing the different components will be, I decided to test the LCD backlight controller next. &lt;/p&gt;&lt;p&gt;For this part of my PCB, I basically built the example circuit from the datasheet of the TPS61176. This chip is essentially a DC-DC boost converter and 6 constant-current/PWM sinks. You control it by providing a PWM signal on its PWM/EN input. It decodes this signal and then runs its own PWM on each IFB# pin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Power supply testing, part 2</title>
      <link>https://www.evankrall.com/posts/pipad/logs/195091-power-supply-testing-part-2/</link>
      <pubDate>Thu, 08 Jul 2021 06:05:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/195091-power-supply-testing-part-2/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/195091-power-supply-testing-part-2&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I assembled the front of my board yesterday (dealing with 0402 components is tedious. I really should just pay JLCPCB to solder on most of the passives for me.) Today, I wanted to quickly test the power supply to make sure I hadn&#39;t broken anything yesterday.&lt;/p&gt;&lt;p&gt;I attached a battery (I managed to find another LiPo battery buried in a drawer), checked output voltage (5.1V ☑️), wired up the raspberry pi (which booted.) Everything seems to work as well as it did two days ago. However, I tested a few things that I hadn&#39;t tested before, and discovered a few unfortunate things:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Power supply testing</title>
      <link>https://www.evankrall.com/posts/pipad/logs/195031-power-supply-testing/</link>
      <pubDate>Tue, 06 Jul 2021 06:31:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/195031-power-supply-testing/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/195031-power-supply-testing&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So I finally finished designing v0.0.1 of my PCB, and had them made by JLCPCB.  This prototype has:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;touchscreen controller&lt;/li&gt;&lt;li&gt;MIPI-DSI to LVDS converter&lt;/li&gt;&lt;li&gt;LED backlight driver&lt;/li&gt;&lt;li&gt;battery controller/boost converter&lt;/li&gt;&lt;li&gt;audio codec, speaker amplifiers, and footprints for speaker and headphone connectors&lt;/li&gt;&lt;li&gt;connectors for the 30-pin dock board and the ambient light sensor&lt;/li&gt;&lt;/ul&gt;&lt;figure&gt;&lt;img src=&#34;https://www.evankrall.com/img/pipad/2672551625549613952.jpg&#34;/&gt;&lt;figcaption&gt;testing the fit of my v0.0.1 prototype board inside the iPad.&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Instead of having the two 100-pin connectors for the CM4 like the final board will have, this version of the PCB is designed sort of like a Pi HAT, with a 40-pin header on the bottom. It also receives the video signal through a 15-pin ribbon cable, and has an extra USB micro B connector wired to the battery controller. This design allows for safer testing: I can connect only the pins that are needed to test one feature at a time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Attempting to write a device tree overlay for the soundcard</title>
      <link>https://www.evankrall.com/posts/pipad/logs/190683-attempting-to-write-a-device-tree-overlay-for-the-soundcard/</link>
      <pubDate>Mon, 22 Mar 2021 03:54:00 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/190683-attempting-to-write-a-device-tree-overlay-for-the-soundcard/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/190683-attempting-to-write-a-device-tree-overlay-for-the-soundcard&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since my &lt;a href=&#34;https://hackaday.io/project/177256-put-a-raspberry-pi-cm4-into-an-original-ipad/log/190208-finally-things-to-solder&#34;&gt;last log&lt;/a&gt;, I connected the other ends of the magnet wires to female header pins so that I can attach to my RPi 4. I really, &lt;em&gt;really&lt;/em&gt; would recommend against trying to do it this way. I&#39;m either gonna spend the board space and use 0.1&#34; headers next time, or go for something easy to solder like an FFC so I can make a matching breakout board.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Finally, things to solder!</title>
      <link>https://www.evankrall.com/posts/pipad/logs/190208-finally-things-to-solder/</link>
      <pubDate>Tue, 09 Mar 2021 08:01:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/190208-finally-things-to-solder/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/190208-finally-things-to-solder&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My most recent JLCPCB order arrived today, which contained:&lt;br/&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;a href=&#34;https://github.com/EvanKrall/i2s_soundcard&#34;&gt;i2s soundcard&lt;/a&gt; based around the TLV320AIC3104 from TI.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/EvanKrall/ipad_connector_breakouts/tree/master/AXK770147G_breakout_ipad1&#34;&gt;Breakout board for the AXK770147G&lt;/a&gt; used to connect the logic board to the portrait dock connector daughterboard.&lt;/li&gt;&lt;li&gt;&lt;a href=&#34;https://github.com/EvanKrall/ipad_connector_breakouts/tree/master/AA03-S024VA1_breakout&#34;&gt;Breakout board for the AA03-S024VA1&lt;/a&gt; used to connect the logic board to the ambient light sensor.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I also included a stencil for the soundcard.&lt;/p&gt;&lt;p&gt;I soldered the breakout board for the AXK770147G with the drag soldering technique, which I definitely need to practice. I needed to do a lot of cleanup with solder wick, plus I seem to have destroyed some of the solder mask. After some basic continuity checking, everything seems okay (though now that I&#39;m looking again, it seems like I may have a bridge between two pins on the bottom right.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: Video output research</title>
      <link>https://www.evankrall.com/posts/pipad/logs/189947-video-output-research/</link>
      <pubDate>Tue, 02 Mar 2021 07:14:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/189947-video-output-research/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/189947-video-output-research&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;While I wait for my audio board and breakout boards to show up, I started working on the video output side of things.&lt;/p&gt;&lt;p&gt;The Raspberry Pi CM4 has four ways to output video:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;2x HDMI&lt;/li&gt;&lt;li&gt;2x MIPI DSI&lt;/li&gt;&lt;li&gt;1x DPI&lt;/li&gt;&lt;li&gt;1x Composite&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;I need to convert these into three different formats (in order of priority):&lt;br/&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;LVDS (FPD-Link or OLDI maybe) for the LP097X02-SLA1 built-in display.&lt;/li&gt;&lt;li&gt;DisplayPort for powering 30-pin video dongles such as the &lt;a href=&#34;https://www.apple.com/au/shop/product/MD098AM/A/apple-digital-av-adapter&#34;&gt;Digital AV Adapter&lt;/a&gt; (HDMI) or the &lt;a href=&#34;https://www.apple.com/shop/product/MC552AM/B/apple-vga-adapter&#34;&gt;30-pin to VGA Adapter&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Composite and/or S-Video for the 30-pin connector&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;I&#39;m not sure why Apple went with DisplayPort internally. I guess Macbook Pros of that era &lt;a href=&#34;https://everymac.com/systems/apple/macbook_pro/specs/macbook-pro-core-2-duo-2.4-aluminum-13-mid-2010-unibody-specs.html#macspecs2&#34;&gt;already had Mini DisplayPort&lt;/a&gt; ports. HDMI is roughly as complicated as DisplayPort, though, and would have simplified their HDMI dongle without adding much complication to their VGA dongle, in my opinion.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: A more reasonable touchscreen controller IC</title>
      <link>https://www.evankrall.com/posts/pipad/logs/189710-a-more-reasonable-touchscreen-controller-ic/</link>
      <pubDate>Thu, 25 Feb 2021 08:06:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/189710-a-more-reasonable-touchscreen-controller-ic/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/189710-a-more-reasonable-touchscreen-controller-ic&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In &lt;a href=&#34;https://hackaday.io/project/177256-put-a-modern-sbc-into-an-original-ipad/log/188901-the-big-scary-touchscreen-connectors&#34;&gt;my first project log&lt;/a&gt;, I had designed a PCB for interfacing with the touchscreen digitizer, based around Atmel&#39;s mXT2952, which was the only device I managed to find that had:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;datasheets available&lt;/li&gt;&lt;li&gt;enough drive / sense pins for the iPad&#39;s screen (40 drive, 30 sense)&lt;/li&gt;&lt;li&gt;a reasonable minimum order quantity&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Unfortunately, the mXT2952 is a tiny 5mm x 10mm 162-pin BGA, with 0.5mm pitch. This is a tiny, tiny package, and they made it extremely dense -- many BGA chips have a few rows of pins, some blank spaces, then a few more rows of pins. To fit a trace between two pads, you need 3 mil traces and 3 or 3.5-mil spaces. To fit a via between four pads, you need vias that are less than 0.25mm diameter / 0.15mm drill. While there are some PCB manufacturers online that claim to have these specs, the cheapest I was able to find was about $150 according to their online quote form (others seemed to be $300 and up). When I engaged with the cheap one, they told me they couldn&#39;t actually do 0.15mm drill holes.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: First prototype of soundcard, some breakout boards, 30-pin connector decision</title>
      <link>https://www.evankrall.com/posts/pipad/logs/189638-first-prototype-of-soundcard-some-breakout-boards-30-pin-connector-decision/</link>
      <pubDate>Tue, 23 Feb 2021 08:06:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/189638-first-prototype-of-soundcard-some-breakout-boards-30-pin-connector-decision/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/189638-first-prototype-of-soundcard-some-breakout-boards-30-pin-connector-decision&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After the last project log, I posted my soundcard board to &lt;a href=&#34;https://www.reddit.com/r/printedcircuitboard&#34;&gt;/r/printedcircuitboard&lt;/a&gt;, which was very helpful. Probably the single most helpful suggestion was to AC-couple the headphone jack instead of DC-coupling it. (The TI codec I chose can DC-couple the headphone port -- it provides pins that can be driven at some common voltage above ground, which the left and right channels are referenced to.) This should prevent short circuits if the headphone jack gets plugged into something that shares a ground with the 30-pin dock. It also freed up two outputs on the codec (the HPLCOM and HPRCOM pins can be used as outputs instead of as common pins). These extra outputs meant I could get rid of the analog switches I was using to select whether the codec&#39;s line out pins would be routed to the speaker amplifiers or to some headers (eventually meant to route to the 30-pin connector.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: The beginnings of the soundcard</title>
      <link>https://www.evankrall.com/posts/pipad/logs/189260-the-beginnings-of-the-soundcard/</link>
      <pubDate>Fri, 12 Feb 2021 22:21:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/189260-the-beginnings-of-the-soundcard/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/189260-the-beginnings-of-the-soundcard&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&#39;m not sure why I&#39;m working on the soundcard now; sound is pretty low priority (below power, display, touch, network connectivity...), but the speaker and headphone connectors are close to the touchscreen connectors.&lt;/p&gt;&lt;p&gt;Since my touchscreen controller is going to be expensive to manufacture, I&#39;m going to have it on a separate PCB than the rest of the project. The board that has my audio codec will wrap around the touchscreen controller, since it needs to have connectors for the speakers, headphone/mic, and potentially send line out audio to the portrait dock connector.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Pipad: The big scary touchscreen connectors</title>
      <link>https://www.evankrall.com/posts/pipad/logs/188901-the-big-scary-touchscreen-connectors/</link>
      <pubDate>Wed, 03 Feb 2021 07:59:00 -0800</pubDate>
      <guid>https://www.evankrall.com/posts/pipad/logs/188901-the-big-scary-touchscreen-connectors/</guid>
      <description>&lt;p&gt;&lt;em&gt;View or comment on this project log on &lt;a href=&#34;https://hackaday.io/project/177256/log/188901-the-big-scary-touchscreen-connectors&#34;&gt;Hackaday.io&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The biggest unknown to me when starting this project was how I was going to interface with the touchscreen. In general, all the other connectors on the logic board are some sort of standard signaling scheme, like analog audio, I2C, USB, SDIO, or LVDS. I&#39;ve never worked with a capacitive touchscreen before, so I had no clue where to start. (I&#39;ve never worked with LVDS before either, but I at least have an idea where I&#39;d learn things about it.)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Designing a PCB in EasyEDA and getting it assembled by JLCPCB</title>
      <link>https://www.evankrall.com/posts/jlcpcb-smt/</link>
      <pubDate>Mon, 12 Oct 2020 19:20:28 -0700</pubDate>
      <guid>https://www.evankrall.com/posts/jlcpcb-smt/</guid>
      <description>&lt;p&gt;Recently I designed a PCB and had it made and assembled by &lt;a href=&#34;https://jlcpcb.com/&#34;&gt;JLCPCB&lt;/a&gt;.&#xA;This is the first time I&amp;rsquo;ve ever done anything like this &amp;ndash; I&amp;rsquo;ve designed circuits on paper, built them on breadboards, soldered circuits together on proto-board PCBs, but before this project I&amp;rsquo;d never used an EDA program, ordered PCBs, or gotten a board assembled by a manufacturer.&#xA;I figure it&amp;rsquo;s worth writing up what I&amp;rsquo;ve learned.&lt;/p&gt;&#xA;&lt;p&gt;As of the time of writing, I haven&amp;rsquo;t received the assembled boards, so this isn&amp;rsquo;t a review of JLCPCB&amp;rsquo;s PCB or SMT services.&#xA;I went with JLCPCB / &lt;a href=&#34;https://easyeda.com&#34;&gt;EasyEDA&lt;/a&gt; because they integrate nicely together, and JLCPCB is cheap.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
